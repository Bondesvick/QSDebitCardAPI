// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QSDataUpdateAPI.Data.Data;

namespace QSDebitCardAPI.Data.Migrations
{
    [DbContext(typeof(QuickServiceDbContext))]
    partial class QuickServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("ActionBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACTIONBY");

                    b.Property<string>("ActionDescription")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("ACTIONDESCRIPTION");

                    b.Property<DateTime>("AuditDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("AUDITDATETIME");

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("COMPUTERNAME");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HASH");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("METHOD");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REQUESTTYPE");

                    b.HasKey("Id");

                    b.ToTable("AUDIT_DETAIL", "dbo");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.BankBranch", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID");

                    b.Property<string>("branch")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH");

                    b.Property<string>("emailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL_ADDRESS");

                    b.Property<string>("sol_Id")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SOL_ID");

                    b.HasKey("Id");

                    b.ToTable("BANK_BRANCHES", "dbo");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.CustomerRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ACCOUNT_NAME");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ACCOUNT_NUMBER");

                    b.Property<string>("Bvn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BVN");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("CustomerAuthType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CUSTOMER_AUTH_TYPE");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("REJECTION_REASON");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("REMARKS");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("REQUEST_TYPE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TranId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TRAN_ID");

                    b.Property<string>("TreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TREATED_BY");

                    b.Property<string>("TreatedByUnit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TREATED_BY_UNIT");

                    b.Property<DateTime?>("TreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("TREATED_DATE");

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_REQUEST_STATUS");

                    b.HasIndex("TreatedByUnit")
                        .HasDatabaseName("IX_TRBY_UNIT");

                    b.ToTable("CUSTOMER_REQUEST");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.DebitCardDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AccountStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCOUNT_STATUS");

                    b.Property<string>("AccountToDebit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCOUNT_TO_DEBIT");

                    b.Property<string>("AuthType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BVN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BVN");

                    b.Property<string>("Branch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BRANCH");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CITY");

                    b.Property<string>("CurrentStep")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CURRENT_STEP");

                    b.Property<long>("CustomerReqId")
                        .HasColumnType("bigint")
                        .HasColumnName("CUSTOMER_REQ_ID");

                    b.Property<DateTime>("DateOfAcceptingTAndC")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_OF_ACCEPTING_T_AND_C");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GENDER");

                    b.Property<bool>("IAcceptTermsAndCondition")
                        .HasMaxLength(100)
                        .HasColumnType("bit")
                        .HasColumnName("I_ACCEPT_TERMS_AND_CONDITIONS");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MARITAL_STATUS");

                    b.Property<string>("NameOnCard")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME_ON_CARD");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("RequestType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("REQUEST_TYPE");

                    b.Property<bool>("Submitted")
                        .HasMaxLength(100)
                        .HasColumnType("bit")
                        .HasColumnName("SUBMITTED");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TITLE");

                    b.Property<string>("hotlistCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HOTLIST_CODE");

                    b.Property<string>("hotlistedCard")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HOTLISTED_CARD");

                    b.HasKey("Id");

                    b.HasIndex("CustomerReqId");

                    b.ToTable("DEBIT_CARD_DETAILS");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.DebitCardDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("AccOpeningReqId")
                        .HasColumnType("int")
                        .HasColumnName("DEBIT_CARD_REQ_ID");

                    b.Property<string>("ContentOrPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DOCUMENT_CONTENT_TYPE");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FILE_NAME");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.HasIndex("AccOpeningReqId");

                    b.ToTable("DEBIT_CARD_DOCS");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.DebitCardDetails", b =>
                {
                    b.HasOne("QSDataUpdateAPI.Core.Domain.Entities.CustomerRequest", "CustomerReq")
                        .WithMany("DebitCardDetails")
                        .HasForeignKey("CustomerReqId")
                        .HasConstraintName("FK_DEBIT_CARD_REQUEST_DETAILS")
                        .IsRequired();

                    b.Navigation("CustomerReq");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.DebitCardDocument", b =>
                {
                    b.HasOne("QSDataUpdateAPI.Core.Domain.Entities.DebitCardDetails", "AccountOpeningRequest")
                        .WithMany("Documents")
                        .HasForeignKey("AccOpeningReqId")
                        .HasConstraintName("FK_DEBIT_CARD_DOC_DEBIT_CARD_REQ_ID")
                        .IsRequired();

                    b.Navigation("AccountOpeningRequest");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.CustomerRequest", b =>
                {
                    b.Navigation("DebitCardDetails");
                });

            modelBuilder.Entity("QSDataUpdateAPI.Core.Domain.Entities.DebitCardDetails", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
